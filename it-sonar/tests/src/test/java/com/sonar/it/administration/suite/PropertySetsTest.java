/*
 * Copyright (C) 2009-2012 SonarSource SA
 * All rights reserved
 * mailto:contact AT sonarsource DOT com
 */
package com.sonar.it.administration.suite;

import com.sonar.orchestrator.Orchestrator;
import com.sonar.orchestrator.selenium.Selenese;
import org.junit.ClassRule;
import org.junit.Ignore;
import org.junit.Test;
import org.sonar.wsclient.services.PropertyQuery;
import org.sonar.wsclient.services.PropertyUpdateQuery;

import static org.fest.assertions.Assertions.assertThat;

public class PropertySetsTest {
  @ClassRule
  public static Orchestrator orchestrator = AdministrationTestSuite.ORCHESTRATOR;

  @Test
  public void should_support_property_sets() {
    Selenese selenese = Selenese.builder().setHtmlTestsInClasspath("property-sets",
      "/selenium/administration/property-sets/create.html",
      "/selenium/administration/property-sets/delete.html",
      "/selenium/administration/property-sets/reference.html",
      "/selenium/administration/property-sets/all_types.html"
    ).build();
    orchestrator.executeSelenese(selenese);
  }

  @Test
  public void should_edit_properties() {
    setProperty("sonar.test.jira.servers", "jira1,jira2");
    setProperty("sonar.test.jira.servers.jira1.url", "http://jira1");
    setProperty("sonar.test.jira.servers.jira2.url", "http://jira2");
    setProperty("sonar.test.jira.servers.jira1.port", "12345");
    setProperty("sonar.test.jira.servers.jira2.port", "66666");

    assertThat(getProperty("sonar.test.jira.servers")).isEqualTo("jira1,jira2");
    assertThat(getProperty("sonar.test.jira.servers.jira1.url")).isEqualTo("http://jira1");
    assertThat(getProperty("sonar.test.jira.servers.jira2.url")).isEqualTo("http://jira2");
    assertThat(getProperty("sonar.test.jira.servers.jira1.port")).isEqualTo("12345");
    assertThat(getProperty("sonar.test.jira.servers.jira2.port")).isEqualTo("66666");
  }

  @Test
  public void should_support_property_sets_with_auto_generated_keys() {
    orchestrator.executeSelenese(Selenese.builder().setHtmlTestsInClasspath("create-auto-generated",
      "/selenium/administration/auto-generated/create.html"
    ).build());

    String[] keys = getProperty("sonar.autogenerated").split("[,]");
    assertThat(getProperty("sonar.autogenerated." + keys[0] + ".value")).isEqualTo("FIRST");
    assertThat(getProperty("sonar.autogenerated." + keys[1] + ".value")).isEqualTo("SECOND");
    assertThat(getProperty("sonar.autogenerated." + keys[2] + ".value")).isEqualTo("THIRD");

    orchestrator.executeSelenese(Selenese.builder().setHtmlTestsInClasspath("update-auto-generated",
      "/selenium/administration/auto-generated/update.html"
    ).build());

    keys = getProperty("sonar.autogenerated").split("[,]");
    assertThat(getProperty("sonar.autogenerated." + keys[0] + ".value")).isEqualTo("FIRST");
    assertThat(getProperty("sonar.autogenerated." + keys[1] + ".value")).isEqualTo("THIRD");
  }

  static void setProperty(String key, String value) {
    orchestrator.getServer().getAdminWsClient().update(new PropertyUpdateQuery(key, value));
  }

  static String getProperty(String key) {
    return orchestrator.getServer().getAdminWsClient().find(new PropertyQuery().setKey(key)).getValue();
  }
}
